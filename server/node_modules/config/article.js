var crypto = require('crypto');
var rand = require('csprng');
var mongoose = require('mongoose');
var gravatar = require('gravatar');
var models = require('config/models');
var im = require('imagemagick');

exports.getArticle = function(id, callback) {
	articles.find({id: id},function(err,articles){		
			if(articles.length != 0){
					var id = articles[0].id;
					var pictureurl = articles[0].pictureurl;
					var name = articles[0].name;
					var description = articles[0].description;
					var price = articles[0].price;
			}else {
				callback({'response': "Article not exist", 'res':false});
			}
	});
}

exports.getArticles = function(callback) {
	models.Articles.find({}, function(err, articles) {
		if (!err){ 
			if(articles.length != 0 && articles != null) {
				if(callback) {
					callback({'response':" articles founded", 'res':true, 'articles':articles});
				}
				console.log("plop")
				return {'response':" articles founded", 'res':true, 'articles':articles};
			} else {
				callback({'response':"Any articles founded", 'res':false});
			}
		 }
        else { throw err; }
	});
	
}

exports.addArticle = function(photopath, photoname, name, description, price, callback){
	var picturesdirectory = "./articlespictures/";
	var thumbnailsdirectory = "./articlespictureshumbnails/";

	fs.rename(photopath + photoname, picturesdirectory + name, function(err){
		if(err != null){
			callback({error:"Server Writting No Good"});
		} else {
			im.resize(
					{
						srcData:fs.readFileSync(picturesdirectory + name, 'binary'),
						width:256
					}, 
					function(err, stdout, stderr){
						if(err != null){
							callback({error:"Resizeing No Good"});
						} else {
							fs.writeFileSync(thumbnailsdirectory + "thumb_" + name, stdout, 'binary');

							var newarticle = new article({
								name: name,
								description: email,
								pictureurl: thumbnailsdirectory + "thumb_" + name,
								price :price
							});

							newarticle.save(function (err) {
								callback({'response':"article " + name + "added succesfully", 'res':"false"});
							});
						}
					}
			);
		}
	});

exports.saveArticle = function(email, password, callback) {
	user.find({email: email},function(err,users){		
			if(users.length != 0){
					var temp = users[0].salt;
					var hash_db = users[0].hashed_password;
					var id = users[0].token;
					var newpass = temp + password;
					var hashed_password = crypto.createHash('sha512').update(newpass).digest("hex");
					var grav_url = gravatar.url(email, {s: '200', r: 'pg', d: '404'});
					
					if(hash_db == hashed_password){
						callback({'response':"Login Sucess",'res':true,'token':id,'grav':grav_url});
					}else{
						callback({'response':"Invalid Password",'res':false});
					}
			}else {
				callback({'response':"User not exist",'res':false});
			}
	});
}}